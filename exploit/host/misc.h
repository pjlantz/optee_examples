#include <inttypes.h>
#include <err.h>
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>
#include <unistd.h>
#include <pthread.h>
#include <sys/wait.h>
#include <time.h>
#include <sys/un.h>
#include <stddef.h>
#include <sched.h>
#include <dirent.h>
#include <endian.h>
#include <fcntl.h>
#include <setjmp.h>
#include <signal.h>
#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <sys/ioctl.h>
#include <sys/mount.h>
#include <sys/prctl.h>
#include <sys/stat.h>
#include <sys/syscall.h>
#include <linux/futex.h>
#include <sys/mman.h>
#include <arpa/inet.h>
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/msg.h>
#include <sys/socket.h>
#include <linux/if_packet.h>
#include <linux/netlink.h>
#include <linux/if_ether.h>
#include <linux/if_arp.h>
#include <asm/types.h>
#include <mqueue.h>


#define u32 uint32_t
#define s64 long;
#define __bitwise__ __attribute__((bitwise))
#define FMODE_OPENED    ((fmode_t)0x80000)
#define FMODE_PATH		((fmode_t)0x4000)
#define DNAME_INLINE_LEN 32


typedef struct {
	int64_t counter;
} atomic64_t;


typedef u32 phys_addr_t;
typedef atomic64_t atomic_long_t;
typedef unsigned int __bitwise fmode_t;
typedef long long __kernel_loff_t;
typedef __kernel_loff_t loff_t;

struct list_head {
	struct list_head *next, *prev;
};


struct callback_head {
	struct callback_head *next;
	void (*func)(struct callback_head *head);
} __attribute__((aligned(sizeof(void *))));
#define rcu_head callback_head


struct llist_node {
	struct llist_node *next;
};


struct llist_head {
	struct llist_node *first;
};


struct dentry_operations {
	void *d_revalidate;
	void *d_weak_revalidate;
	void *d_hash;
	void *d_compare;
	void *d_delete;
	void *d_init;
	void *d_release;
	void *d_prune;
	void *d_iput;
	void *d_dname;
	void *d_automount;
	void *d_manage;
	void *d_real;
};


struct dentry {
	struct dentry_operations *d_op;
	void *d_fsdata;
	long int buf[1024];	
};


struct path {
	void *mnt;
	struct dentry *dentry;
};


struct file_operations {
	void *owner;
	void *llseek;
	void *read;
	void *write;
	void *aio_read;
	void *aio_write;
	void *readdir;
	void *poll;
	void *unlocked_ioctl;
	void *compat_ioctl;
	void *mmap;
	void *open;
	void *flush;
	void *release;
	void *fsync;
	void *aio_fsync;
	void *fasync;
	void *lock;
	void *sendpage;
	void *get_unmapped_area;
	void *check_flags;
	void *flock;
	void *splice_write;
	void *splice_read;
	void *setlease;
	void *fallocate;
	void *show_fdinfo;
};


struct super_block {
	struct list_head s_list;
	unsigned int s_dev;
	unsigned long s_blocksize;
	unsigned char s_blocksize_bits;
	unsigned char s_dirt;
	uint64_t s_maxbytes;
	void *s_type;
	void *s_op;
	void *dq_op;
	void *s_qcop;
	void *s_export_op;
	unsigned long s_flags;
} super_block;


struct mutex {
	unsigned int count;
	unsigned int wait_lock;
	struct list_head wait_list;
	void *owner;
};


struct inode {
	struct list_head i_hash;
	struct list_head i_list;
	struct list_head i_sb_list;
	struct list_head i_dentry_list;
	unsigned long i_ino;
	unsigned int i_count;
	unsigned int i_nlink;
	unsigned int i_uid;
	unsigned int i_gid;
	unsigned int i_rdev;
	uint64_t i_version;
	uint64_t i_size;
	unsigned int i_size_seqcount;
	long i_atime_tv_sec;
	long i_atime_tv_nsec;
	long i_mtime_tv_sec;
	long i_mtime_tv_nsec;
	long i_ctime_tv_sec;
	long i_ctime_tv_nsec;
	uint64_t i_blocks;
	unsigned int i_blkbits;
	unsigned short i_bytes;
	unsigned short i_mode;
	unsigned int i_lock;
	struct mutex i_mutex;
	unsigned int i_alloc_sem_activity;
	unsigned int i_alloc_sem_wait_lock;
	struct list_head i_alloc_sem_wait_list;
	void *i_op;
	void *i_fop;
	struct super_block *i_sb;
	void *i_flock;
	void *i_mapping;
	char i_data[84];
	void *i_dquot_1;
	void *i_dquot_2;
	struct list_head i_devices;
	void *i_pipe_union;
	unsigned int i_generation;
	unsigned int i_fsnotify_mask;
	void *i_fsnotify_mark_entries;
	struct list_head inotify_watches;
	struct mutex inotify_mutex;
} inode;


struct file {
	union {
		struct llist_node	fu_llist;
		struct rcu_head 	fu_rcuhead;
	} f_u;
	struct path f_path;
	void *f_inode;
	struct file_operations *f_op;
	uint32_t f_lock;
	uint8_t f_write_hint;
	atomic_long_t f_count;	
	fmode_t  f_flags;
	unsigned int  f_mode;	
	long int buf[1024];
};


struct dma_buf_ops {
	bool cache_sgt_mapping;
	void *attach;
	void *detach;
	void *pin;
	void *unpin;
	void *map_dma_buf;
	void *unmap_dma_buf;
	void *release;
	void *begin_cpu_access;
	void *end_cpu_access;
	void *mmap;
	void *vmap;
	void *vunmap;
};


struct dma_buf_map {
	void *vaddr;
	bool is_iomem;
};


struct dma_buf {
	size_t size;
	struct file *file;
	struct list_head attachments;
	struct dma_buf_ops *ops;
	long int buf[1024];
};

struct tee_shm {
	void *ctx;
	phys_addr_t paddr;
	void *kaddr;
	size_t size;
	unsigned int offset;
	void **pages;
	size_t num_pages;
	struct dma_buf *dmabuf;
	u32 flags;
	int id;
};
